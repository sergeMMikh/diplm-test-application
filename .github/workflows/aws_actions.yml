name: Ci-Cd-Pipeline-to-AWS

env:
  AWS_REGION_NAME: "eu-central-1"
  REGISTRY: docker.io
  IMAGE_NAME: sergemmikh/test-app

on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*' 
      # only trigger on branches, not on tags
    branches: '**'

jobs:
  
  integration:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DHUB_USER }}
          password: ${{ secrets.DHUB_TOKEN }}

      - name: Extract tag name
        id: vars
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
  
      - name: Build and push Docker image
        run: |
          echo "Latest tag: ${{ steps.get-latest-tag.outputs.tag }}"
          docker build -t $IMAGE_NAME:${{ github.sha }} .
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:${{ steps.get-latest-tag.outputs.tag }}
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:${{ steps.get-latest-tag.outputs.tag }}
      
  deployment:
    runs-on: ubuntu-latest
    needs: [integration]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

  #     - name: Create new Elastic Beanstalk Application Version
  #       run: |
  #         aws elasticbeanstalk create-application-version \
  #           --application-name ${{ env.EB_APPLICATION_NAME }} \
  #           --version-label "Ver-${{ github.sha }}" \
  #           --source-bundle S3Bucket=${{ env.EB_PACKAGE_S3_BUCKET_NAME }},S3Key=${{ env.DEPLOY_PACKAGE_NAME }}

  #     - name: Update Elastic Beanstalk Environment Configuration
  #       run: |
  #         aws elasticbeanstalk update-environment \
  #           --environment-name ${{ env.EB_ENVIROMENT_NAME }} \
  #           --option-settings Namespace=aws:autoscaling:launchconfiguration,OptionName=InstanceType,Value=t4g.medium \
  #           --version-label "Ver-${{ github.sha }}"

  #     - name: Print message for task end
  #       run: echo "The deployment task is complete"
